apiVersion: v1
kind: Secret
metadata:
  name: {{ include "emqx.fullname" . }}-auth
  labels:
    {{- include "emqx.labels" . | nindent 4 }}
type: Opaque
data:
  admin-username: {{ .Values.auth.username | b64enc | quote }}
  admin-password: {{ randAlphaNum 16 | b64enc | quote }}
  erlang-cookie: {{ randAlphaNum 32 | b64enc | quote }}

---
# Job pour initialiser EMQX avec les credentials
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "emqx.fullname" . }}-init
  labels:
    {{- include "emqx.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "emqx.fullname" . }}-init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: init
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for EMQX to be ready..."
          until curl -f http://{{ include "emqx.fullname" . }}-lb:{{ .Values.service.ports.dashboard }}/status; do
            echo "EMQX not ready, waiting..."
            sleep 10
          done
          echo "EMQX is ready!"
          
          # Récupération des credentials
          USERNAME=$(echo $ADMIN_USERNAME | base64 -d)
          PASSWORD=$(echo $ADMIN_PASSWORD | base64 -d)
          
          echo "Admin credentials configured:"
          echo "Username: $USERNAME"
          echo "Password: $PASSWORD"
        env:
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "emqx.fullname" . }}-auth
              key: admin-username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "emqx.fullname" . }}-auth
              key: admin-password